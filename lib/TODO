pyroe@DESKTOP-EFCP6SI MINGW64 /c/Dev/jdk/jdk-17.0.7-oracle/bin
$ ./keytool.exe -list -v -alias androiddebugkey -keystore ~/.android/debug.keystore
Enter keystore password:  android
Alias name: androiddebugkey
Creation date: 25 mag 2024
Entry type: PrivateKeyEntry
Certificate chain length: 1
Certificate[1]:
Owner: C=US, O=Android, CN=Android Debug
Issuer: C=US, O=Android, CN=Android Debug
Serial number: 1
Valid from: Sat May 25 18:29:06 CEST 2024 until: Mon May 18 18:29:06 CEST 2054
Certificate fingerprints:
         SHA1: 52:3C:5A:3F:78:B4:93:D5:31:3B:D6:28:5F:8E:1B:8A:0F:76:51:A8
         SHA256: C7:E9:4F:F1:24:6E:78:15:17:A2:76:63:97:FE:FC:27:A8:54:B7:1C:A1:77:AC:D3:01:82:15:A0:2A:B8:C0:5F
Signature algorithm name: SHA1withRSA (weak)
Subject Public Key Algorithm: 2048-bit RSA key
Version: 1

Warning:
The certificate uses the SHA1withRSA signature algorithm which is considered a security risk. This algorithm will be disabled in a future update.



GESTIONE DEI TESTI E DELLE LINGUE
GESTIONE ACCESSO CON FIREBASE E OTP SU MAIL DA CONVALIDARE 
         https://stackoverflow.com/questions/55371405/how-to-use-sendemailverification-method
         await _auth.createUserWithEmailAndPassword (
           email: //wherever you set their email,
           password: //wherever you set their password,
         ).then((FirebaseUser user) {
           //If a user is successfully created with an appropriate email
         if (user != null){
           user.sendEmailVerification();
         }
         })
         .catchError();
ADD CREATE OWN TO ROUTER: CreateOwn AS ALREADY PRESENT ON AboutUs

ADD PAGE OWN TOURNAMENT 
ADD PAGE ENROLLED TOURNAMENT 
         --- TOP CUT CALCULATOR



INSERIRE PAGINA DI CERTIFICAZIONE MAIL IN FASE DI LOGIN
RISOLVERE IL PROBLEMA DI LANCIO SU BROWSER
UNIVOCITA' CONTATTI -- impedire login con stessa mail
COMPLETARE REGISTRAZIONE  E CAPIRE SE MIGLIORARE
GESTIONE ERRORI CON SLACK TOST DIFFERENTE
AGIUNGERE ICONE AI CAMPI FORM E DARE UNA UI PIU' SIMILE A QUELLA IN IMMAGINE

full screen loader with gif processing data!




#################################################
    onPressed:  () async {

      //TODO 
      //step1 show loading page 

      
      try {
        //cancel user from FireStore [unabled at the moment to prevent the inconsistance of DB]
        //await deleteUserDocument(currentUserUid);

        //cancel user from FireBase 
        await authManager.deleteUser(context);
       

        // hide loading page

        // show snackmessage with the confirmation of the deletion 
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text("Utente rimosso dal database ")),
        );

        //move to splash page 
         logFirebaseEvent('Button_navigate_to');
        context.goNamed(
          'Splash',
          extra: <String, dynamic>{
            kTransitionInfoKey: const TransitionInfo(
              hasTransition: true,
              transitionType: PageTransitionType.fade,
              duration: Duration(milliseconds: 0),
            ),
          },
        );
      } catch(e) {
        //catch issue hiding loading page and showing snackmessage of the issue  
        final errorMsg = switch (e.code) {
          'email-already-in-use' => 'Error: The email is already in use by a different account',
          'INVALID_LOGIN_CREDENTIALS' => 'Error: The supplied auth credential is incorrect, malformed or has expired',
          _ => 'Error: ${e.message!}',
        };
        ScaffoldMessenger.of(context).hideCurrentSnackBar();
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text(errorMsg)),
        );
      }

    },
#####################################################################



PARTE 2222222222222222222222222222222222222

TODO: MODIFICARE GRAFICA SLACK BAR [da sopra per evitare il caso della tastiera aperta]
TODO: AGGIUNGERE INTEGRAZIONE MAPPE PER INDIRIZZO COMPLETO
TODO: delete account not remove from user DB 



###################################################################
- FULL SCREEN LOADING (animation)
- CHECK INTERNET CONNECTIVITY
final isConnected = await NetworkManager.instance.isConnected()
if (!isConnected) {
	FULLSCREENLOADER.stopLoading();
	return;
}

- FORM VALIDATION
if(!signupFormKey.currentState!.validate()){
	FULLSCREENLOADER.stopLoading();
	return;
}

//PRIVACY POLICY FLAG WITH SLACK BAR MESSAGE IF NOT

final userCredential = await AuthenticationRepository.instance.registerWithEmailAndPassword(email.text.trim(), password.text.trim());
final newUser = UserModel(
	id: userCredential.user!.uid,
	firstName: firstName.text.trim().
	profilePicture: '',
)

final userRepository = Get.put(UserRepository());
await userRepository.saveUserRecord(newUser);

FULLSCREENLOADER.stopLoading();
SLACK BAR MESSAGE (CONGRATULATION, ACCOUNT CREATED, VERIFY TO CONTINUE)
Router.GOTO VerifyMailPage

###################################################################
@@@@@@ NEL MIO CASO @@@@@@

final user = await authManager.createAccountWithEmail(context,
    _model.emailAddressTextController.text,
    _model.passwordTextController.text,
);
------------------------------------>
FirebaseAuthManager get authManager => _authManager;  																		[lib/auth/firebase_auth/auth_util.dart]
	final _authManager = FirebaseAuthManager();																				[lib/auth/firebase_auth/auth_util.dart]
		class FirebaseAuthManager extends AuthManager 																		[lib/auth/firebase_auth/firebase_auth_manager.dart]
			abstract class _authManager																						[lib/auth/auth_manager.dart]								
createAccountWithEmail																										[lib/auth/firebase_auth/firebase_auth_manager.dart]
	_signInOrCreateAccount(context, () => emailCreateAccountFunc(email, password), 'EMAIL');								[lib/auth/firebase_auth/firebase_auth_manager.dart]
		final userCredential = await emailCreateAccountFunc(email, password); 												[lib/auth/firebase_auth/firebase_auth_manager.dart]
			
			emailCreateAccountFunc(email, password) 																		[lib/auth/firebase_auth/email_auth.dart]
				FirebaseAuth.instance.createUserWithEmailAndPassword(email, password)										[lib/auth/firebase_auth/email_auth.dart]


		logFirebaseAuthEvent(userCredential?.user, 'EMAIL');																[lib/auth/firebase_auth/firebase_auth_manager.dart]
		if (userCredential?.user != null) 																					[lib/auth/firebase_auth/firebase_auth_manager.dart]
			await maybeCreateUser(userCredential!.user!); 																	[lib/auth/firebase_auth/firebase_auth_manager.dart]

				maybeCreateUser(User user)																					[lib/backend/backend.dart]
					final userRecord = UsersRecord.collection.doc(user.uid);												[lib/backend/backend.dart]
					final userExists = await userRecord.get().then((u) => u.exists);										[lib/backend/backend.dart]
				if (userExists) {
				    currentUserDocument = await UsersRecord.getDocumentOnce(userRecord);
				    return;
				userData = createUsersRecordData(
					email:  ?? valore
					displayName: ?? valore
					photoUrl: ?? valore 
					uid: user.uid,
					phoneNumber: ?? valore 	
					createdTime: getCurrentTimestamp

				await userRecord.set(userData); //setta tutti i dati qui dalla mappa
				currentUserDocument = UsersRecord.getDocumentFromData(userData, userRecord); //recupera utente fresh
					 UsersRecord._(userRecord, mapFromFirestore(userData)); 


			if userCredential == null																						[lib/auth/firebase_auth/firebase_auth_manager.dart]
				return null																									[lib/auth/firebase_auth/firebase_auth_manager.dart]
			else 																											[lib/auth/firebase_auth/firebase_auth_manager.dart]
				return PetsyFirebaseUser.fromUserCredential(userCredential)													[lib/auth/firebase_auth/firebase_auth_manager.dart]
		error 																												[lib/auth/firebase_auth/firebase_auth_manager.dart]
			'email-already-in-use' => 'Error: The email is already in use by a different account',							[lib/auth/firebase_auth/firebase_auth_manager.dart]
			'INVALID_LOGIN_CREDENTIALS' => 'Error: The supplied auth credential is incorrect, malformed or has expired',	[lib/auth/firebase_auth/firebase_auth_manager.dart]
			SHOWED AS SNACK_BAR
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


                        if (user == null) {
                          return;
                        }
                        //REGISTRATION
                        await UsersRecord.collection.doc(user.uid).update({
                          ...createUsersRecordData(
                            displayName: _model.fullNameTextController.text,
                            createdTime: DateTime.now(),
                          ),
                          /*
                          ...mapToFirestore(
                            {
                            },
                          ),*/


@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
https://firebase.flutter.dev/docs/firestore/usage/
https://www.youtube.com/watch?v=Lvy75rlDaxg












